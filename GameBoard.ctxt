#BlueJ class context
comment0.params=
comment0.target=void\ init()
comment0.text=\n\ Called\ by\ the\ browser\ or\ applet\ viewer\ to\ inform\ this\ JApplet\ that\ it\n\ has\ been\ loaded\ into\ the\ system.\ \n\ It\ is\ always\ called\ before\ the\ first\ \n\ time\ that\ the\ start\ method\ is\ called.\n
comment1.params=
comment1.target=void\ start()
comment1.text=\n\ Called\ by\ the\ browser\ or\ applet\ viewer\ to\ inform\n\ this\ JApplet\ that\ it\ should\ start\ its\ execution.\ \n\ It\ is\ called\ after\ the\ init\ method\ and\ \n\ each\ time\ the\ JApplet\ is\ revisited\ in\ a\ Web\ page.\ \n
comment10.params=g
comment10.target=void\ printHand(java.awt.Graphics)
comment10.text=\n\ Prints\ the\ current\ players\ hand.\n\ @param\ g\ graphics\ object\ for\ this\ applet.\n
comment11.params=g\ player
comment11.target=void\ printHand(java.awt.Graphics,\ Player)
comment11.text=\n\ Prints\ a\ specific\ players\ hand.\n\ @param\ g\ the\ graphics\ object\ for\ this\ applet.\n\ @param\ player\ the\ player\ whose\ hand\ will\ be\ drawn.\n
comment12.params=c
comment12.target=void\ addToHand(Card)
comment12.text=\n\ Adds\ a\ card\ to\ the\ current\ players\ hand\ list.\n\ @param\ c\ the\ card\ to\ be\ added.\n
comment13.params=e
comment13.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment13.text=\n\ Operations\ done\ on\ a\ mouse\ click.\n\ @param\ e\ MouseEvent\ object.\n
comment14.params=e
comment14.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment14.text=\n\ Empty\ method\ for\ MouseListerner\ Interface.\n\ @param\ e\ MouseEvent\ Object.\n
comment15.params=e
comment15.target=void\ mouseExited(java.awt.event.MouseEvent)
comment15.text=\n\ Empty\ method\ for\ MouseListerner\ Interface.\n\ @param\ e\ MouseEvent\ Object.\n
comment16.params=e
comment16.target=void\ mousePressed(java.awt.event.MouseEvent)
comment16.text=\n\ Empty\ method\ for\ MouseListerner\ Interface.\n\ @param\ e\ MouseEvent\ Object.\n
comment17.params=e
comment17.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment17.text=\n\ Empty\ method\ for\ MouseListerner\ Interface.\n\ @param\ e\ MouseEvent\ Object.\n
comment18.params=p
comment18.target=void\ startCards(Player)
comment18.text=\n\ Prompts\ for\ and\ initilizes\ the\ players\ start\ cards.\n\ @param\ p\ The\ player\ to\ be\ prompted.\n
comment19.params=p
comment19.target=void\ selectShortDestCard(Player)
comment19.text=\n\ Method\ called\ when\ destination\ deck\ is\ pressed\n\ within\ gameplay\n\ \n\ @param\ p\ \ the\ current\ player\ that\ pressed\ the\ deck\n
comment2.params=
comment2.target=void\ stop()
comment2.text=\ \n\ Called\ by\ the\ browser\ or\ applet\ viewer\ to\ inform\ this\ JApplet\ that\n\ it\ should\ stop\ its\ execution.\ It\ is\ called\ when\ the\ Web\ page\ that\n\ contains\ this\ JApplet\ has\ been\ replaced\ by\ another\ page,\ and\ also\n\ just\ before\ the\ JApplet\ is\ to\ be\ destroyed.\ \n
comment20.params=
comment20.target=void\ setCurrent()
comment20.text=\n\ Sets\ whose\ turn\ it\ currently\ is\ in\ the\ game\n
comment21.params=g
comment21.target=void\ paintRoutes(java.awt.Graphics)
comment21.text=\n\ Paints\ the\ routes\ on\ the\ applet\n\ \n\ @param\ g\ \ the\ applet\ graphic\n
comment22.params=r
comment22.target=void\ setScore(Route)
comment22.text=\n\ Increments\ a\ players\ score\ when\ a\ route\ is\ captured.\n\ @param\ r\ the\ Route\ captured.\n
comment23.params=
comment23.target=void\ replaceDeck()
comment23.text=\n\ Replaces\ the\ deck\ with\ the\ discard\ deck\n
comment24.params=c
comment24.target=void\ discardRail(java.awt.Color)
comment24.text=\n\ Adds\ card\ of\ color\ c\ to\ discard\ pile\n\ @param\ c\ the\ color\ of\ the\ card\ to\ be\ discarded.\n
comment25.params=s
comment25.target=void\ discardRail(java.lang.String)
comment25.text=\n\ Adds\ a\ railcard\ to\ the\ discard\ pile.\n\ @param\ the\ name\ of\ the\ card\ to\ be\ discarded.\n
comment26.params=r\ p
comment26.target=boolean\ grayPath(Route,\ Player)
comment26.text=\n\ For\ a\ gray\ path,\ allows\ the\ user\ to\ pick\n\ which\ color\ to\ use\ and\ subtracts\ trains\ \n\ \n\ @param\ r\ a\ route\n\ @param\ p\ current\ player\n\ \n\ @return\ whether\ the\ route\ has\ been\ filled\n
comment27.params=col\ i
comment27.target=void\ replace(java.awt.Color,\ int)
comment27.text=\n\ Places\ i\ cards\ with\ color\ col\ in\ the\ discard\ deck\n\ \n\ @param\ col\ a\ color\n\ @param\ i\ an\ integer\n
comment28.params=
comment28.target=boolean\ lastTurn()
comment28.text=\n\ Determines\ if\ this\ is\ the\ last\ turn\n\ \n\ @boolean\ if\ it\ is\ the\ last\ turn\n
comment3.params=g
comment3.target=void\ paint(java.awt.Graphics)
comment3.text=\n\ Paint\ method\ for\ applet.\n\ Draws\ background\ and\ the\ graphics\n\ for\ turn\ operations.\n\ \n\ @param\ \ g\ \ \ the\ Graphics\ object\ for\ this\ applet\n
comment4.params=
comment4.target=void\ setFaceUp()
comment4.text=\n\ Creates\ the\ face\ up\ rail\ cards.\n
comment5.params=g
comment5.target=void\ gameOver(java.awt.Graphics)
comment5.text=\n\ Actions\ taken\ once\ game\ has\ ended.\ Score's\ are\ displayed\n\ and\ a\ winner\ is\ chosen.\ Also\ deals\ with\ end\ game\ bonuses\ \n\ \n\ @param\ g\ applet\ graphic\n
comment6.params=g
comment6.target=void\ drawBackground(java.awt.Graphics)
comment6.text=\n\ Draws\ board\ display\n\ \n\ @param\ g\ \ applet\ graphic\n
comment7.params=g
comment7.target=void\ showFaceUp(java.awt.Graphics)
comment7.text=\n\ Shows\ the\ face\ up\ cards\ on\ the\ board\n\ \n\ @param\ g\ applet\ graphic\n
comment8.params=g
comment8.target=void\ drawScoreboard(java.awt.Graphics)
comment8.text=\n\ Draws\ the\ scoreboard\ onto\ the\ applet\n\ \n\ @param\ g\ applet\ graphic\n
comment9.params=g\ player
comment9.target=void\ drawScoreboard(java.awt.Graphics,\ Player)
comment9.text=\n\ Draws\ scoreboard\ info\ for\ a\ specific\ player.\n\ @param\ g\ graphics\ object\ for\ this\ applet.\n\ @param\ player\ player\ whose\ scoreboard\ info\ will\ be\ drawn.\n
numComments=29
